


import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hedieh
 */
public class Login extends javax.swing.JFrame 
{

//    User user;
    InsuranceCompany insuranceCompany = new InsuranceCompany("Hooman Company", "admin", "admin", 20);
    /**
     * Creates new form Login
     */
    public Login() throws CloneNotSupportedException, PolicyException 
    {
        TestCase.testCode(insuranceCompany);
        initComponents();
    }

  public void login() throws IOException, ClassNotFoundException, CloneNotSupportedException, PolicyException
  {
      if(insuranceCompany.validateAdmin(userName.getText(), password.getText()))
      {
      AdminUI admin=new AdminUI(insuranceCompany,this);
      this.setVisible(false);
      admin.setVisible(true);
      }
      else
      {
       User user=insuranceCompany.validateUser(userName.getText(),password.getText());
      password.setText("");
      if(user!= null)
      {
           ArrayList<String>cities=insuranceCompany.populateDistinctCityNames();
           UserUI userUI = new UserUI(user,this,cities);
           userUI.setVisible(true);
           this.setVisible(false);
      }
      else
      {
          JOptionPane.showMessageDialog(this,"Username or password is wrong");
      }
      }
//      User user=insuranceCompany.validateUser(userName.getText(),password.getText());
//      password.setText("");
//      if(user!= null)
//      {
//           ArrayList<String>cities=insuranceCompany.populateDistinctCityNames();
//           UserUI userUI = new UserUI(user,this,cities);
//           userUI.setVisible(true);
//           this.setVisible(false);
//      }
//      else
//      {
//          JOptionPane.showMessageDialog(this,"Username or password is wrong");
//      }
  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userName = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        loadItem = new javax.swing.JMenu();
        load = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        listOfUsers = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });

        loginButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 0, 51));
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Username ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Password");

        loadItem.setText("File");
        loadItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadItemActionPerformed(evt);
            }
        });

        load.setText("Load");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });
        loadItem.add(load);

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        loadItem.add(save);

        jMenuBar1.add(loadItem);

        listOfUsers.setText("List of Users");
        listOfUsers.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                listOfUsersMenuSelected(evt);
            }
        });
        listOfUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOfUsersActionPerformed(evt);
            }
        });
        jMenuBar1.add(listOfUsers);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userName, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(password))))
                .addGap(145, 145, 145))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
       try
       {
           insuranceCompany.load();
       }
       catch(IOException e)
               {
                   Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,e); 
               }
               catch(ClassNotFoundException e)
                       {
                       Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,e); 
                       }
                                     
    }//GEN-LAST:event_loadActionPerformed

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
//         userName.setText(userName.getText());
    }//GEN-LAST:event_userNameActionPerformed

    private void loadItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadItemActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
       
        try {
            login();
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CloneNotSupportedException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PolicyException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
      try
      {
          insuranceCompany.save();
      }
      catch(IOException e)
      {
          Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,e); 
      }
    }//GEN-LAST:event_saveActionPerformed

    private void listOfUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listOfUsersActionPerformed
//       String information = "";
//        for(User user : insuranceCompany.getUsers().values())
//       {
//          information+= "User name: "+user.getName()+" ,Password: "+user.getUserPassword()+"\n";
//       }
//        JOptionPane.showMessageDialog(this,information);
    }//GEN-LAST:event_listOfUsersActionPerformed

    private void listOfUsersMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_listOfUsersMenuSelected
        // TODO add your handling code here:
          String information = "";
        for(User user : insuranceCompany.getUsers().values())
       {
          information+= "User name: "+user.getName()+" ,Password: "+user.getUserPassword()+"\n";
       }
        JOptionPane.showMessageDialog(this,information);
    }//GEN-LAST:event_listOfUsersMenuSelected

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try
                {
                    new Login().setVisible(true);
                }
                catch(Exception e)
                        {
                           Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,e); 
                        }
              
            }
        });
    }
    
//     InsurancePolicy policy;
//    UserUI userUI;
    
//    Constructor
//    this.policy=policy;
//        this.userUI=userUI;
//        initComponents();
//         
//       policyIDText.setText(policy.getPolicyID()+"");
//       policyHolderNameText.setText(policy.getPolicyHolderName()+"");
//       numberOfClaimsText.setText(policy.getNumberOfClaims()+"");
//       modelText.setText(policy.getCarModel());
////       CarType carType=CarType.valueOf(carTypeText.getText());
//       carTypeComboBox.setSelectedItem(policy.car.getCarType().toString());
//       manufacturingYearText.setText(policy.getCar().getManufacturingYear()+"");
//       priceText.setText(policy.getCar().getPrice()+"");
//       dayText.setText(policy.getExpiryDate().getDay()+"");
//       monthText.setText(policy.getExpiryDate().getMonth()+"");
//       yearText.setText(policy.getExpiryDate().getYear()+"");
//       if(policy instanceof ThirdPartyPolicy)
//       {
//           thirdPartyPolicy.setSelected(true);
//           comprehensivePolicy.setSelected(false);
//           driverAgeText.setVisible(false);
//           levelText.setVisible(false);
//           commentText.setText(((ThirdPartyPolicy)policy).getComment());
//       }
//      else
//       {
//            thirdPartyPolicy.setSelected(false);
//           comprehensivePolicy.setSelected(true);
//           commentText.setVisible(false);
//           driverAgeText.setText(((ComprehensivePolicy)policy).getDriverAge()+"");
//           levelText.setText(((ComprehensivePolicy)policy).getLevel()+"");
//       }
    
//       comprehensiveStateChange
//               if (thirdPartyPolicy.isSelected())
//        {
//            driverAgeText.setVisible(false);
//            driverAgeLable.setVisible(false);
//            levelLable.setVisible(false);
//            levelText.setVisible(false);
//            commentText.setVisible(true);
//            commentLable.setVisible(true);
//
//        }
//        else
//        {
//            driverAgeText.setVisible(true);
//            driverAgeLable.setVisible(true);
//            levelLable.setVisible(true);
//            levelText.setVisible(true);
//        }

    
//    updateAction
//           try
//       {
//           int policyID=Integer.parseInt(policyIDText.getText());
//           String policyHolderName= policyHolderNameText.getText();
//           int numberOfClaims=Integer.parseInt(numberOfClaimsText.getText());
//           String model= modelText.getText();
////           carTypeComboBox.setSelectedItem(user.);
//           CarType carType= CarType.valueOf(carTypeComboBox.getSelectedItem().toString());
////           CarType carType=CarType.valueOf(carTypeComboBox.getSelectedItem());
//           int manufacturingYear=Integer.parseInt(manufacturingYearText.getText());
//           double price=Double.parseDouble(priceText.getText());
//           Car car= new Car(model,carType,manufacturingYear,price);
//           int day=Integer.parseInt(dayText.getText());
//           int month=Integer.parseInt(monthText.getText());
//           int year=Integer.parseInt(yearText.getText());
//           MyDate date= new MyDate(year,month,day);
////           sets
//           policy.setPolicyHolderName(policyHolderName);
//           policy.setPolicyID(policyID);
//           policy.setNumberOfClaims(numberOfClaims);
//           policy.setCar(car);
//           policy.setExpiryDate(date);
//           if(thirdPartyPolicy.isSelected())
//           {
//                String comment= commentText.getText();
//                ((ThirdPartyPolicy)policy).comments=comment;
//           }
//           else
//           {
//                int driverAge=Integer.parseInt(driverAgeText.getText());
//                int level=Integer.parseInt(levelText.getText());
//                ((ComprehensivePolicy)policy).driverAge=driverAge;
//                ((ComprehensivePolicy)policy).level=level;
//           }
//           JOptionPane.showMessageDialog(this,"Plan has been Updated");
//           userUI.fillTable();
//           this.dispose();
//    }                                            
//   catch(Exception e)
//   {
//        JOptionPane.showMessageDialog(this,e);
//   }
    

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu listOfUsers;
    private javax.swing.JMenuItem load;
    private javax.swing.JMenu loadItem;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField password;
    private javax.swing.JMenuItem save;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables


}
